---
- name: swapfile is absent from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent

- name: swap is disabled
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: kubernetes repo is present
  yum_repository:
    name: 'kubernetes'
    description: 'Kubernetes'
    baseurl: '{{ kube_repo.baseurl }}'
    enabled: yes
    exclude: 'kube*'
    gpgcheck: yes
    gpgkey: '{{ kube_repo.key_yum }} {{ kube_repo.key_rpm }}'
    repo_gpgcheck: yes

# todo this is optional, test
- name: SELinux is set to permissive (effectively disabled)
  selinux:
    policy: targeted
    state: permissive

- name: kubeadm, kubelet, kubectl is present
  yum:
    name:
      - kubeadm-1.15.*
      - kubelet-1.15.*
      - kubectl-1.15.*
    state: present
    disable_excludes: kubernetes

- name: kubelet service is enabled and started
  service:
    name: kubelet
    enabled: yes
    state: started

- name: br_netfilter module is loaded
  modprobe:
    name: br_netfilter
    state: present

- name: sysctl config is updated to route bridge traffic through iptables
  copy:
    dest: '/etc/sysctl.d/k8s.conf'
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1

- name: sysctl is refreshed with new configuration
  command: sysctl --system

#- name: cleanup after previous provision
#  shell: |
#    yes | kubeadm reset
#    rm -rf /var/lib/etcd/*

# master setup
- include_tasks: master.yml
  when: k8s_role == "master"

# node setup
- name: get the kubeadm join command from the kubernetes master
  command: kubeadm token create --print-join-command
  when: k8s_role == "master"
  register: k8s_join_command_result

- name: debug join cmd result
  debug:
    msg: "{{ k8s_join_command_result }}"

- name: set the kubeadm join command globally
  set_fact:
    k8s_join_command: "{{ k8s_join_command_result.stdout }}"
  when: k8s_join_command_result.stdout is defined
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"

- name: debug join cmd
  debug:
    msg: "{{ k8s_join_command }}"

- include_tasks: node.yml
  when: k8s_role == "node"
